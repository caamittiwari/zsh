# Function to source files if they exist
function zsh_add_file() {
    [ -f "$ZDOTDIR/$1" ] && source "$ZDOTDIR/$1"
}

function zsh_add_plugin() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then
        # For plugins
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh" || \
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.zsh"

    else
        git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
    fi
}

function zsh_add_completion() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then
        # For completions
		completion_file_path=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
		fpath+="$(dirname "${completion_file_path}")"
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh"
    else
        git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
		fpath+=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
        [ -f $ZDOTDIR/.zccompdump ] && $ZDOTDIR/.zccompdump
    fi
	completion_file="$(basename "${completion_file_path}")"
	if [ "$2" = true ] && compinit "${completion_file:1}"
}
# creation virtual env

 function create_venv_folder_with_default(){
        
        if [ -z "$1" ]; then 
        python3 -m venv $PWD/.venv && source .venv/bin/activate
        else
        python$1 -m venv $PWD/.venv && source .venv/bin/activate
        fi
        # $(pip3 install pylint) # linter  added virtual  env 
        touch $PWD/pyrightconfig.json && echo '{ "venvPath": "." , "venv":".venv"}' > $PWD/pyrightconfig.json  # to avoid import error 
 }

 

function c_venv(){

    if [ -d "$PWD/.venv" ];then
      echo  ".venv is exist and  virtual activate"
        source .venv/bin/activate
    else 
      p=$(python3 --version)  #  for default version
      Req_p=$1
      if [ -z "$1" ]; then 
         
       echo  "as no python version selected as  argument default $p version will use for virtual env "
       $(create_venv_folder_with_default)

      else  
        if [[ $Req_p -eq 3.8 ]]; then
          echo " python$Req_p  will install"
          $(create_venv_folder_with_default)
          
        else 
          echo "selected version python$Req_p not install"
          read "ANSWER? Are you go with default version $p? Y/N "
          case "$ANSWER" in
          [yY] | [yY][eE][sS])
          # $1=""
          $(create_venv_folder_with_default)
            ;;
          [nN] | [nN][oO])
            echo "please do it manaualy [ install required python version and   use command 'python[version no ] -m venv .venv'  ]"
            ;;
          *)
            echo "Please enter y/yes or n/no"
            ;;
        esac
        fi  
      fi
    fi



}

